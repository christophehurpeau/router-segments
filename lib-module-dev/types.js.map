{"version":3,"sources":["../src/types.js"],"names":["RouteType","EndRouteType"],"mappings":"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","file":"types.js","sourcesContent":["import type { RouteType, EndRouteType } from './routes';\n\nexport type { RouteType };\n\nexport type LocaleType = string;\n\nexport type PathDictionaryType = { [LocaleType]: string };\n\nexport type RouteRefType = any;\n\nexport type SegmentRouterBuilderType = {|\n  defaultRoute: (ref: RouteRefType, key: ?string) => void,\n  add: (path: string, ref: RouteRefType, key: ?string) => void,\n  addLocalized: (localizedPaths: PathDictionaryType, ref: RouteRefType, key: ?string) => void,\n  addSegment: (path: string, buildSegment: (builder: SegmentRouterBuilderType) => void) => void,\n  addLocalizedSegment: (\n    localizedPaths: PathDictionaryType,\n    buildSegment: (builder: SegmentRouterBuilderType) => void,\n  ) => void,\n|};\n\n// export type SegmentCallbackType = (builder: SegmentRouterBuilderType) => void;\n\nexport type SegmentRoutePathType = {|\n  path: string,\n  completePath: string,\n  regExp: RegExp,\n  namedParams: Array<string>,\n|};\n\nexport type RoutePathType = {|\n  path: string,\n  completePath: string,\n  regExp: RegExp,\n  namedParams: Array<string>,\n  toPath: (args: Object) => string,\n|};\n\nexport type RoutesType = Array<RouteType>;\nexport type RouteMapType = Map<string, RouteType>;\n\nexport type RouteMatchType = {|\n  ref: RouteRefType,\n  path: string,\n  route: RouteType,\n  routePath: RoutePathType,\n  namedParams: ?Map<string, string>,\n  otherParams: ?Array<string>,\n|};\n\nexport type RouterType = {|\n  get: (key: string) => ?EndRouteType,\n  find: (path: string, locale: ?string) => ?RouteMatchType,\n  toPath: (key: string, args: any) => string,\n  toLocalizedPath: (locale: string, key: string, args: any) => string,\n|};\n\nexport type RouterBuilderType = {|\n  add: (path: string, ref: RouteRefType, key: ?string) => void,\n  addLocalized: (localizedPaths: PathDictionaryType, ref: RouteRefType, key: ?string) => void,\n  addSegment: (path: string, buildSegment: (builder: SegmentRouterBuilderType) => void) => void,\n  addLocalizedSegment: (\n    localizedPaths: PathDictionaryType,\n    buildSegment: (builder: SegmentRouterBuilderType) => void,\n  ) => void,\n  getRoutes: () => RoutesType,\n  createRouter: () => RouterType,\n|};\n"]}