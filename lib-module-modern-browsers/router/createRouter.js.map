{"version":3,"sources":["../../src/router/createRouter.js"],"names":["findMatch","routes","routeMap","getRequiredRoute","routeKey","route","get","Error","key","find","path","locale","toPath","args","getPath","toLocalizedPath"],"mappings":";AAEA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,gBAAe,UAACC,MAAD,EAAqBC,QAArB,EAA4D;AACzE,QAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,QAAD,EAAsB;AAC7C,UAAMC,QAAQH,SAASI,GAAT,CAAaF,QAAb,CAAd;AACA,QAAI,CAACC,KAAL,EAAY,MAAM,IAAIE,KAAJ,CAAW,mBAAkBH,QAAS,GAAtC,CAAN;AACZ,WAAOC,KAAP;AACD,GAJD;;AAMA,SAAO;AACLC,SAAK,aAACE,GAAD;AAAA,aAAgCL,iBAAiBK,GAAjB,CAAhC;AAAA,KADA;AAELC,UAAM,cAACC,IAAD,EAAeC,MAAf;AAAA,aAAoDX,UAAUU,IAAV,EAAgBT,MAAhB,EAAwBU,MAAxB,CAApD;AAAA,KAFD;AAGLC,YAAQ,gBAACJ,GAAD,EAAcK,IAAd;AAAA,aAAoCV,iBAAiBK,GAAjB,EAAsBM,OAAtB,GAAgCF,MAAhC,CAAuCC,IAAvC,CAApC;AAAA,KAHH;AAILE,qBAAiB,yBAACJ,MAAD,EAAiBH,GAAjB,EAA8BK,IAA9B;AAAA,aACfV,iBAAiBK,GAAjB,EAAsBM,OAAtB,CAA8BH,MAA9B,EAAsCC,MAAtC,CAA6CC,IAA7C,CADe;AAAA;AAJZ,GAAP;AAOD,CAdD","file":"createRouter.js","sourcesContent":["import type { RoutesType, RouteMapType, RouterType, RouteMatchType } from '../types';\nimport type { EndRouteType } from '../routes';\nimport findMatch from './findMatch';\n\nexport default (routes: RoutesType, routeMap: RouteMapType): RouterType => {\n  const getRequiredRoute = (routeKey: string) => {\n    const route = routeMap.get(routeKey);\n    if (!route) throw new Error(`No route named \"${routeKey}\"`);\n    return route;\n  };\n\n  return {\n    get: (key: string): ?EndRouteType => getRequiredRoute(key),\n    find: (path: string, locale: ?string): ?RouteMatchType => findMatch(path, routes, locale),\n    toPath: (key: string, args: any): string => getRequiredRoute(key).getPath().toPath(args),\n    toLocalizedPath: (locale: string, key: string, args: any): string =>\n      getRequiredRoute(key).getPath(locale).toPath(args),\n  };\n};\n"]}