{"version":3,"sources":["../../src/builder/createSegmentRouterBuilderCreator.js"],"names":["SegmentRouteType","RouteType","PathDictionaryType","RouteRefType","SegmentRouterBuilderType","createRoute","createLocalizedRoute","createSegmentRoute","createLocalizedSegmentRoute","defaultLocale","addToRouteMap","createSegmentRouterBuilder","segmentRoute","getCompletePath","path","completePath","getCompleteLocalizedPaths","localizedPaths","completeLocalizedPaths","getCompletePathForLocale","locale","get","Object","keys","forEach","createLocalizedPathFromSegment","Array","from","_createLocalizedEndRoute","ref","key","route","finalKey","_createEndRoute","_createLocalizedSegmentRoute","buildSegment","freeze","_createSegmentRoute","defaultRoute","add","nestedRoutes","push","addLocalized","Error","addSegment","addLocalizedSegment"],"mappings":"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","file":"createSegmentRouterBuilderCreator.js","sourcesContent":["import type { SegmentRouteType } from '../routes/index';\nimport type {\n  RouteType,\n  PathDictionaryType,\n  RouteRefType,\n  SegmentRouterBuilderType,\n} from '../types';\nimport {\n  createRoute,\n  createLocalizedRoute,\n  createSegmentRoute,\n  createLocalizedSegmentRoute,\n} from '../routes/create';\n\ntype AddToRouteMapType = (key: string, route: RouteType) => void;\nexport default (defaultLocale: ?string, addToRouteMap: AddToRouteMapType) => {\n  const createSegmentRouterBuilder = (segmentRoute: SegmentRouteType) => {\n    const getCompletePath = path => segmentRoute.path.completePath + path;\n    const getCompleteLocalizedPaths = (localizedPaths: PathDictionaryType): PathDictionaryType => {\n      const completeLocalizedPaths = {};\n\n      const getCompletePathForLocale = !segmentRoute.localizedPaths\n        ? (path, locale) => `${segmentRoute.path.completePath}${path}`\n        : (path, locale) => `${segmentRoute.localizedPaths.get(locale).completePath}${path}`;\n\n      Object.keys(localizedPaths).forEach((locale: string) => {\n        completeLocalizedPaths[locale] = getCompletePathForLocale(localizedPaths[locale], locale);\n      });\n\n      return completeLocalizedPaths;\n    };\n\n    const createLocalizedPathFromSegment = (path: string) => {\n      const localizedPaths = {};\n      Array.from(segmentRoute.localizedPaths.keys()).forEach(\n        locale => (localizedPaths[locale] = path),\n      );\n      return localizedPaths;\n    };\n\n    const _createLocalizedEndRoute = (\n      localizedPaths: PathDictionaryType,\n      ref: RouteRefType,\n      key: ?string,\n    ) => {\n      const completeLocalizedPaths = getCompleteLocalizedPaths(localizedPaths);\n      const finalKey: string = key || completeLocalizedPaths[defaultLocale];\n      const route = createLocalizedRoute(localizedPaths, completeLocalizedPaths, ref);\n      addToRouteMap(finalKey, route);\n      return route;\n    };\n\n    const _createEndRoute = (path: string, ref: RouteRefType, key: ?string) => {\n      if (segmentRoute.localizedPaths) {\n        return _createLocalizedEndRoute(createLocalizedPathFromSegment(path), ref, key);\n      }\n\n      const completePath = getCompletePath(path);\n      const route = createRoute(path, completePath, ref);\n      const finalKey: string = key || completePath;\n      addToRouteMap(finalKey, route);\n      return route;\n    };\n\n    const _createLocalizedSegmentRoute = (\n      localizedPaths: PathDictionaryType,\n      buildSegment: (builder: SegmentRouterBuilderType) => void,\n    ) => {\n      const completeLocalizedPaths = getCompleteLocalizedPaths(localizedPaths);\n      const route = createLocalizedSegmentRoute(localizedPaths, completeLocalizedPaths);\n      buildSegment(createSegmentRouterBuilder(route));\n      route.freeze();\n      return route;\n    };\n\n    const _createSegmentRoute = (\n      path: string,\n      buildSegment: (builder: SegmentRouterBuilderType) => void,\n    ) => {\n      if (segmentRoute.localizedPaths) {\n        return _createLocalizedSegmentRoute(createLocalizedPathFromSegment(path), buildSegment);\n      }\n\n      const completePath = getCompletePath(path);\n      const route = createSegmentRoute(path, completePath);\n      buildSegment(createSegmentRouterBuilder(route));\n      route.freeze();\n      return route;\n    };\n\n    return {\n      defaultRoute: (ref: RouteRefType, key: ?string) => {\n        segmentRoute.defaultRoute = _createEndRoute('', ref, key);\n      },\n\n      add: (path: string, ref: RouteRefType, key: ?string): void => {\n        segmentRoute.nestedRoutes.push(_createEndRoute(path, ref, key));\n      },\n\n      addLocalized: (localizedPaths: PathDictionaryType, ref: RouteRefType, key: ?string): void => {\n        if (!defaultLocale) throw new Error('Invalid locales');\n        segmentRoute.nestedRoutes.push(_createLocalizedEndRoute(localizedPaths, ref, key));\n      },\n\n      addSegment: (\n        path: string,\n        buildSegment: (builder: SegmentRouterBuilderType) => void,\n      ): void => {\n        segmentRoute.nestedRoutes.push(_createSegmentRoute(path, buildSegment));\n      },\n\n      addLocalizedSegment: (\n        localizedPaths: PathDictionaryType,\n        buildSegment: (builder: SegmentRouterBuilderType) => void,\n      ): void => {\n        if (!defaultLocale) throw new Error('Invalid locales');\n        segmentRoute.nestedRoutes.push(_createLocalizedSegmentRoute(localizedPaths, buildSegment));\n      },\n    };\n  };\n  return createSegmentRouterBuilder;\n};\n"]}