{"version":3,"sources":["../../src/routes/create.js"],"names":["createRoutePath","createRoutePathSegment","LocaleType","PathDictionaryType","RoutePathType","SegmentRoutePathType","RouteRefType","Route","LocalizedRoute","SegmentRoute","LocalizedSegmentRoute","createLocalizedPaths","pathDictionary","completePathDictionary","segment","localizedPaths","Map","Object","keys","forEach","locale","path","set","routerPath","checkRef","ref","Error","createRoute","completePath","routePath","createLocalizedRoute","createSegmentRoute","createLocalizedSegmentRoute"],"mappings":"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","file":"create.js","sourcesContent":["import { createRoutePath, createRoutePathSegment } from './createRoutePath';\nimport type {\n  LocaleType,\n  PathDictionaryType,\n  RoutePathType,\n  SegmentRoutePathType,\n  RouteRefType,\n} from '../types';\nimport Route from './EndRoute';\nimport LocalizedRoute from './LocalizedEndRoute';\nimport SegmentRoute from './SegmentRoute';\nimport LocalizedSegmentRoute from './LocalizedSegmentRoute';\n\nconst createLocalizedPaths = (\n  pathDictionary: PathDictionaryType,\n  completePathDictionary: PathDictionaryType,\n  segment: boolean,\n) => {\n  const localizedPaths = new Map();\n  Object.keys(pathDictionary).forEach((locale: LocaleType) => {\n    const path = pathDictionary[locale];\n    if (segment) {\n      const routerPath: SegmentRoutePathType = createRoutePathSegment(\n        path,\n        completePathDictionary[locale],\n      );\n      localizedPaths.set(locale, routerPath);\n    } else {\n      const routerPath: RoutePathType = createRoutePath(path, completePathDictionary[locale]);\n      localizedPaths.set(locale, routerPath);\n    }\n  });\n  return localizedPaths;\n};\n\nconst checkRef = (ref: any) => {\n  if (!ref) throw new Error(`Invalid ref: \"${ref}\"`);\n};\n\nexport const createRoute = (path: string, completePath: string, ref: RouteRefType): Route => {\n  /* istanbul ignore else */\n  if (!PRODUCTION) checkRef(ref);\n  const routePath: RoutePathType = createRoutePath(path, completePath);\n  return new Route(routePath, ref);\n};\n\nexport const createLocalizedRoute = (\n  pathDictionary: PathDictionaryType,\n  completePathDictionary: PathDictionaryType,\n  ref: RouteRefType,\n): LocalizedRoute => {\n  /* istanbul ignore else */\n  if (!PRODUCTION) checkRef(ref);\n  const localizedPaths = createLocalizedPaths(pathDictionary, completePathDictionary, false);\n  return new LocalizedRoute(localizedPaths, ref);\n};\n\nexport const createSegmentRoute = (path: string, completePath: string): SegmentRoute => {\n  const routePath = createRoutePathSegment(path, completePath);\n  return new SegmentRoute(routePath);\n};\n\nexport const createLocalizedSegmentRoute = (\n  pathDictionary: PathDictionaryType,\n  completePathDictionary: PathDictionaryType,\n): LocalizedSegmentRoute => {\n  const localizedPaths = createLocalizedPaths(pathDictionary, completePathDictionary, true);\n  return new LocalizedSegmentRoute(localizedPaths);\n};\n"]}