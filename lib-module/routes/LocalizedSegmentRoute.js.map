{"version":3,"sources":["../../src/routes/LocalizedSegmentRoute.js"],"names":["LocalizedSegmentRoute","localizedPaths","nestedRoutes","Object","freeze","locale","get","Array","from","entries","JSON","stringify","toJSON"],"mappings":";;;;IAGqBA,qB;AAKnB,iCAAYC,cAAZ,EAA4D;AAAA;;AAAA,SAH5DC,YAG4D;;AAC1D,SAAKD,cAAL,GAAsBA,cAAtB;AACD;;;;6BAEQ;AACPE,aAAOC,MAAP,CAAc,IAAd;AACAD,aAAOC,MAAP,CAAc,KAAKF,YAAnB;AACD;;;4BAEOG,M,EAAoC;AAC1C,aAAO,KAAKJ,cAAL,CAAoBK,GAApB,CAAwBD,MAAxB,CAAP;AACD;;;gCAEoB;AACnB,aAAO,IAAP;AACD;;;6BAEQ;AACP,aAAOE,MAAMC,IAAN,CAAW,KAAKP,cAAL,CAAoBQ,OAApB,EAAX,CAAP;AACD;;;+BAEU;AACT,aAAOC,KAAKC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACD;;;;;;SA5BkBZ,qB","file":"LocalizedSegmentRoute.js","sourcesContent":["import type { LocaleType, RoutePathType } from '../types';\nimport type LocalizedRoute from './LocalizedEndRoute';\n\nexport default class LocalizedSegmentRoute {\n  localizedPaths: Map<LocaleType, RoutePathType>;\n  nestedRoutes: Array<LocalizedRoute | LocalizedSegmentRoute> = [];\n  defaultRoute: ?LocalizedRoute;\n\n  constructor(localizedPaths: Map<LocaleType, RoutePathType>) {\n    this.localizedPaths = localizedPaths;\n  }\n\n  freeze() {\n    Object.freeze(this);\n    Object.freeze(this.nestedRoutes);\n  }\n\n  getPath(locale: LocaleType): ?RoutePathType {\n    return this.localizedPaths.get(locale);\n  }\n\n  isSegment(): boolean {\n    return true;\n  }\n\n  toJSON() {\n    return Array.from(this.localizedPaths.entries());\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n"]}