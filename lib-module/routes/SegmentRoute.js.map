{"version":3,"sources":["../../src/routes/SegmentRoute.js"],"names":["SegmentRoute","path","nestedRoutes","Object","freeze","JSON","stringify","toJSON"],"mappings":";;;;IAGqBA,Y;AAEnB;AAIA,wBAAYC,IAAZ,EAAiC;AAAA;;AAAA,SAHjCC,YAGiC;;AAC/B,SAAKD,IAAL,GAAYA,IAAZ;AACD;;;;6BAEQ;AACPE,aAAOC,MAAP,CAAc,IAAd;AACAD,aAAOC,MAAP,CAAc,KAAKF,YAAnB;AACD;;;8BAEwB;AACvB,aAAO,KAAKD,IAAZ;AACD;;;gCAEoB;AACnB,aAAO,IAAP;AACD;;;6BAEQ;AACP,aAAO,KAAKA,IAAZ;AACD;;;+BAEU;AACT,aAAOI,KAAKC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACD;;;;;;SA7BkBP,Y","file":"SegmentRoute.js","sourcesContent":["import type { RoutePathType } from '../types';\nimport type Route from './EndRoute';\n\nexport default class SegmentRoute {\n  path: RoutePathType;\n  // nestedRoutes: Array<Route | SegmentRoute> = []; // disable flow: can cause issues with Object.freeze\n  nestedRoutes = [];\n  defaultRoute: ?Route;\n\n  constructor(path: RoutePathType) {\n    this.path = path;\n  }\n\n  freeze() {\n    Object.freeze(this);\n    Object.freeze(this.nestedRoutes);\n  }\n\n  getPath(): RoutePathType {\n    return this.path;\n  }\n\n  isSegment(): boolean {\n    return true;\n  }\n\n  toJSON() {\n    return this.path;\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n"]}