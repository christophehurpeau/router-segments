{"version":3,"sources":["../src/types.js"],"names":["RouteType"],"mappings":"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","file":"types.js","sourcesContent":["import type { RouteType, EndRouteType } from './routes';\n\nexport type { RouteType };\n\nexport type LocaleType = string;\n\nexport type PathDictionaryType = { [LocaleType]: string };\n\nexport type RouteRefType = any;\n\nexport type SegmentRouterBuilderType = {|\n  defaultRoute: (ref: RouteRefType, key: ?string) => void,\n  add: (path: string, ref: RouteRefType, key: ?string) => void,\n  addLocalized: (localizedPaths: PathDictionaryType, ref: RouteRefType, key: ?string) => void,\n  addSegment: (path: string, buildSegment: (builder: SegmentRouterBuilderType) => void) => void,\n  addLocalizedSegment: (\n    localizedPaths: PathDictionaryType,\n    buildSegment: (builder: SegmentRouterBuilderType) => void,\n  ) => void,\n|};\n\n// export type SegmentCallbackType = (builder: SegmentRouterBuilderType) => void;\n\nexport type SegmentRoutePathType = {|\n  path: string,\n  completePath: string,\n  regExp: RegExp,\n  namedParams: Array<string>,\n|};\n\nexport type RoutePathType = {|\n  path: string,\n  completePath: string,\n  regExp: RegExp,\n  namedParams: Array<string>,\n  toPath: (args: Object) => string,\n|};\n\nexport type RoutesType = Array<RouteType>;\nexport type RouteMapType = Map<string, RouteType>;\n\nexport type RouteMatchType = {|\n  ref: RouteRefType,\n  path: string,\n  route: RouteType,\n  routePath: RoutePathType,\n  namedParams: ?Map<string, string>,\n  otherParams: ?Array<string>,\n|};\n\nexport type RouterType = {|\n  get: (key: string) => ?EndRouteType,\n  find: (path: string, locale: ?string) => ?RouteMatchType,\n  toPath: (key: string, args: any) => string,\n  toLocalizedPath: (locale: string, key: string, args: any) => string,\n|};\n\nexport type RouterBuilderType = {|\n  add: (path: string, ref: RouteRefType, key: ?string) => void,\n  addLocalized: (localizedPaths: PathDictionaryType, ref: RouteRefType, key: ?string) => void,\n  addSegment: (path: string, buildSegment: (builder: SegmentRouterBuilderType) => void) => void,\n  addLocalizedSegment: (\n    localizedPaths: PathDictionaryType,\n    buildSegment: (builder: SegmentRouterBuilderType) => void,\n  ) => void,\n  getRoutes: () => RoutesType,\n  createRouter: () => RouterType,\n|};\n"]}